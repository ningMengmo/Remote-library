HTTP协议  （一种明文传输协议 ）
    http是基于 请求-响应 的方式完成通信的，每一次通信都是由客户端向服务器发出请求，传递一些消息过去，然后经过服务器程序处理后，响应给客户端一些消息。

    https是在http的基础上发展的  增加了安全性，其他和http协议完全一致

    http协议规定：
        1.每次 请求-响应 都是 *独立* 的，相互之间互不干扰。这种模式的协议我们称之为  *无状态协议*
            http的无状态会带来一些问题，这些问题我们会在后续的课程中讨论

        2.每次 请求-响应 传递的消息都是纯文本（字符串），而且文本格式必须按照http协议规定的格式书写。




⭐请求的消息格式
请求消息格式有三部分组成:
    请求行：高度概括了客户端想要干什么
    
    请求头：描述了请求的一些额外信息
    
    请求体：包含了要给服务器传递的正文数据。请求体是可以省略的


    ·请求行：请求行是整个http报文的第一行字符串，它包含三个部分：请求方法 路径+参数+hash 协议和版本

        在实际的应用中，我们逐渐有了一些约定俗成的规范：
            1.动作通常有：GET（获取资源）、POST（提交消息）、PUT（修改数据）、DELETE（删除数据）。其中，GET和POST最为常见。
            2.GET和DELETE请求不能有请求体，而POST和PUT请求可以有请求体

        浏览器遵循了上面的规范，这带来了GET和POST的诸多区别

        浏览器自动发出的请求基本都是GET请求，而POST请求需要开发者手动处理，比如在form表单中设置method为POST



    ·请求头 header ： 浏览器每次请求服务器都会自动附带很多的请求头，其实这些请求头大部分服务器是不需要的
        我们只需关注下面几个请求头即可：
            1.Host：url地址中的主机
            2.User-Agent：客户端的信息描述（是谁发出的请求）
            3.⭐Content-Type: 请求体的消息是什么格式，如果没有请求体，这个字段无意义
                该字段的常见取值为：（MIME）
                    1）application/x-www-form-urlencoded : 表示请求体的数据格式和url地址中参数的格式一样

                    2）application/json : 表示请求体的数据是json格式

                    3）multipart/form-data : 一种特殊的请求体格式，上传文件一般选择该格式


    ·请求体 body ：包含业务数据的字符串
        理论上，请求体可以是任意格式的字符串，但习惯上，服务器普遍能识别以下格式：
            （就是你请求头中 Content-Type 是下面其中一种格式 就要按照后面你规定的样子传输数据）
            application/x-www-form-urlencoded：属性名=属性值&属性名=属性值...
            
            application/json：{"属性名":"属性值", "属性名":"属性值"}
            
            multipart/form-data：使用某个随机字符串作为属性之间的分隔符，通常用于文件上传

    由于请求体格式的多样性，服务器在分析请求体时可能无法知晓具体的格式，从而不知道如何解析请求体
    因此，服务器往往要求在请求头中附带一个属性 Content-Type 来描述请求体使用的格式



⭐响应的消息格式
服务器的响应格式包含三个部分：
    响应行     响应头       响应体

    ·响应行 ： 响应行是整个响应字符串的第一行
        响应行包含两个部分：
            协议版本：表示服务器打算和客户端用什么协议通信
            状态码、状态消息：表示服务器对当前请求的表态

            状态码在0~399之间的都是正常的，其他是不正常的


    ·响应头 header ： 和请求头一样，响应头也是由很多个键值对组成的，具体有哪些键值对，完全取决于服务器程序

        目前，对我们最重要的键值对是 Content-Type，它有多种取值，表示响应体的数据类型。

        在B/S（浏览器/服务器）模式中，浏览器会自动根据响应头中Content-Type的取值，决定如何处理响应体。

        有下面几种返回值：（响应的是什么格式 做处理）
            1.text/plain ： 普通的纯文本，浏览器通常会将响应体原封不动的显示到页面上
            
            2.text/html ：html文档，浏览器通常会将响应体作为页面进行渲染
            
            3.text/javascript 或 application/javascript ：js代码，浏览器通常会使用JS执行引擎将它解析执行
            
            4.text/css  ：css代码，浏览器会将它视为样式
            
            5.image/jpeg    ：浏览器会将它视为jpg图片
            
            6.attachment    ：附件，浏览器看到这个类型，通常会触发下载功能
            
            7.其他MIME类型
    

    ·响应体 body ： 响应的主体内容



