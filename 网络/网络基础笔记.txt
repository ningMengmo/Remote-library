客户端和服务器
    在大部分情况下，通信总是由一方发出一个消息开始，而另一方回复一个消息结束

    发出消息的一方称之为 客户端 Client，发出消息的过程称之为 请求 Request。  （发出消息的就为客户端）

    回复消息的一方称之为 服务器 Server，回复消息的过程称之为 响应 Response

        （服务器并非一定是计算机一般都是一个程序）



这个过程中，有几个点需要特别注意：
    1.不管是客户端，还是服务器，它们都是一个 应用程序 ，而不是一台计算机。客户端和服务器可以分布在不同的计算机上，也可以在同一台计算机上，并不需要特殊看待。
        比如我们之前接触的 live server 插件，就是一个服务器，它运行在本地的计算机上。
        大部分后端开发的就是服务器程序，前端的Node技术也能开发服务器程序。

    2.客户端和服务器的这种交互模式称之为「经典C/S（客户端/服务器）结构」。在这种结构中，如果客户端是浏览器，则我们称之为 B/S （浏览器/服务器）结构。

    3.服务器程序往往是为 互联网产品提供服务，因此又称之为 web服务器。

    4.一次完整的交互，总是从 请求开始，响应结束



url中是不能出现非ASCⅡ 字符   现在浏览器都会自动转换了 

url地址  （全称uniform resource locator，统一资源定位符）
    它是一个字符串，用于表达互联网中某个资源的位置


                                
                    ⭐一个完整的url地址由多个部分组成 ： *** 协议 + 主机 + 端口 + 路径 + 参数 + hash ***



·协议 Protocal / Schema ： 表示客户端希望用什么方式和服务器沟通，现在只需要知道这里固定写 http 或 https 即可
    补充知识：
    如果在浏览器的地址栏省略了协议，浏览器会自动为你补全
    可以在Chrome浏览器的地址栏点击右键，显示完整的地址
    https 协议比 http 协议更安全，但往往出现在线上，本地的服务器通常不会是https


·主机 Host ：表示客户端希望在哪台计算机上寻找资源 （可以理解为去那个位置找）
    两种写法：IP地址和域名

        IP地址：IP地址是一个网络中计算机的唯一编号，通常，一个IP对应一台计算机。
                记住特殊IP地址： 127.0.0.1，它表示本机IP

        域名：域名类似IP地址的别名，把不容易记忆的数字变为容易记忆的单词。当使用域名访问时，会自动转换为IP地址。
                记住特殊域名：localhost，它表示的IP地址是 127.0.0.1


·端口 Port ：表示客户端希望在哪个应用程序中寻找资源  （可以理解为取那个房间）
    每个服务器程序，都会监听一个或多个端口，只有找到对应的端口（一个端口号中只能有一个服务器程序），才能找到这个服务器程序
    
    端口号是可选的，若不填写，则：
            如果使用的是http协议，默认端口号为80
            如果使用的是https协议，默认端口号为443


·路径 Path ： 服务器上往往有许许多多的资源，每个资源都有自己的访问路径     路径是可选的，若不填写，则路径为 /   （路径写什么取决于服务器）


·参数 Query / Param ：
        某些资源可以根据需要呈现不同的内容，比如一篇新闻列表的页面，可以指定它呈现第几页的新闻，而「第几页」就属于一些额外信息，这些额外信息可以通过参数传递


·hash ： 在网络通信中，hash没有什么用，它往往作为浏览器的锚链接出现。
